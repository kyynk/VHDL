|Lab4_1
A[0] => onebitALU:G1:0:G2:stage0.A
A[0] => onebitALU:G1:6:G4:stage3.A
A[1] => onebitALU:G1:1:G3:stage1.A
A[2] => onebitALU:G1:2:G3:stage1.A
A[3] => onebitALU:G1:3:G3:stage1.A
A[4] => onebitALU:G1:4:G3:stage1.A
A[5] => onebitALU:G1:5:G3:stage1.A
A[6] => onebitALU:G1:6:G4:stage2.A
B[0] => onebitALU:G1:0:G2:stage0.B
B[0] => onebitALU:G1:6:G4:stage3.B
B[1] => onebitALU:G1:1:G3:stage1.B
B[2] => onebitALU:G1:2:G3:stage1.B
B[3] => onebitALU:G1:3:G3:stage1.B
B[4] => onebitALU:G1:4:G3:stage1.B
B[5] => onebitALU:G1:5:G3:stage1.B
B[6] => onebitALU:G1:6:G4:stage2.B
opcode[0] => onebitALU:G1:0:G2:stage0.opcode[0]
opcode[0] => onebitALU:G1:1:G3:stage1.opcode[0]
opcode[0] => onebitALU:G1:2:G3:stage1.opcode[0]
opcode[0] => onebitALU:G1:3:G3:stage1.opcode[0]
opcode[0] => onebitALU:G1:4:G3:stage1.opcode[0]
opcode[0] => onebitALU:G1:5:G3:stage1.opcode[0]
opcode[0] => onebitALU:G1:6:G4:stage2.opcode[0]
opcode[0] => onebitALU:G1:6:G4:stage3.opcode[0]
opcode[1] => temp[9].IN0
opcode[1] => onebitALU:G1:0:G2:stage0.opcode[1]
opcode[1] => onebitALU:G1:1:G3:stage1.opcode[1]
opcode[1] => onebitALU:G1:2:G3:stage1.opcode[1]
opcode[1] => onebitALU:G1:3:G3:stage1.opcode[1]
opcode[1] => onebitALU:G1:4:G3:stage1.opcode[1]
opcode[1] => onebitALU:G1:5:G3:stage1.opcode[1]
opcode[1] => onebitALU:G1:6:G4:stage2.opcode[1]
opcode[1] => onebitALU:G1:6:G4:stage3.opcode[1]
opcode[2] => temp[9].IN1
opcode[2] => onebitALU:G1:0:G2:stage0.opcode[2]
opcode[2] => onebitALU:G1:1:G3:stage1.opcode[2]
opcode[2] => onebitALU:G1:2:G3:stage1.opcode[2]
opcode[2] => onebitALU:G1:3:G3:stage1.opcode[2]
opcode[2] => onebitALU:G1:4:G3:stage1.opcode[2]
opcode[2] => onebitALU:G1:5:G3:stage1.opcode[2]
opcode[2] => onebitALU:G1:6:G4:stage2.opcode[2]
opcode[2] => onebitALU:G1:6:G4:stage3.opcode[2]
opcode[3] => onebitALU:G1:0:G2:stage0.opcode[3]
opcode[3] => onebitALU:G1:1:G3:stage1.opcode[3]
opcode[3] => onebitALU:G1:2:G3:stage1.opcode[3]
opcode[3] => onebitALU:G1:3:G3:stage1.opcode[3]
opcode[3] => onebitALU:G1:4:G3:stage1.opcode[3]
opcode[3] => onebitALU:G1:5:G3:stage1.opcode[3]
opcode[3] => onebitALU:G1:6:G4:stage2.opcode[3]
opcode[3] => onebitALU:G1:6:G4:stage3.opcode[3]
overflow << overflow.DB_MAX_OUTPUT_PORT_TYPE
HEX2[0] << hex:stage4.HEX2[0]
HEX2[1] << hex:stage4.HEX2[1]
HEX2[2] << hex:stage4.HEX2[2]
HEX2[3] << hex:stage4.HEX2[3]
HEX2[4] << hex:stage4.HEX2[4]
HEX2[5] << hex:stage4.HEX2[5]
HEX2[6] << hex:stage4.HEX2[6]
HEX1[0] << hex:stage4.HEX1[0]
HEX1[1] << hex:stage4.HEX1[1]
HEX1[2] << hex:stage4.HEX1[2]
HEX1[3] << hex:stage4.HEX1[3]
HEX1[4] << hex:stage4.HEX1[4]
HEX1[5] << hex:stage4.HEX1[5]
HEX1[6] << hex:stage4.HEX1[6]


|Lab4_1|onebitALU:\G1:0:G2:stage0
A => mux_2to1:stage0.w0
A => mux_2to1:stage0.w1
B => mux_2to1:stage1.w0
B => mux_2to1:stage1.w1
less => mux_4to1:stage3.w3
carryin => fulladd:stage2.Cin
opcode[0] => mux_4to1:stage3.s[0]
opcode[1] => mux_4to1:stage3.s[1]
opcode[2] => mux_2to1:stage1.s
opcode[3] => mux_2to1:stage0.s
result <= mux_4to1:stage3.f
set <= fulladd:stage2.s
carryout <= fulladd:stage2.Cout


|Lab4_1|onebitALU:\G1:0:G2:stage0|mux_2to1:stage0
w0 => f.DATAB
w1 => f.DATAA
s => f.OUTPUTSELECT
f <= f.DB_MAX_OUTPUT_PORT_TYPE


|Lab4_1|onebitALU:\G1:0:G2:stage0|mux_2to1:stage1
w0 => f.DATAB
w1 => f.DATAA
s => f.OUTPUTSELECT
f <= f.DB_MAX_OUTPUT_PORT_TYPE


|Lab4_1|onebitALU:\G1:0:G2:stage0|fulladd:stage2
Cin => s.IN1
Cin => Cout.IN0
Cin => Cout.IN0
x => s.IN0
x => Cout.IN0
x => Cout.IN1
y => s.IN1
y => Cout.IN1
y => Cout.IN1
s <= s.DB_MAX_OUTPUT_PORT_TYPE
Cout <= Cout.DB_MAX_OUTPUT_PORT_TYPE


|Lab4_1|onebitALU:\G1:0:G2:stage0|mux_4to1:stage3
w0 => Mux0.IN0
w1 => Mux0.IN1
w2 => Mux0.IN2
w3 => Mux0.IN3
s[0] => Mux0.IN5
s[1] => Mux0.IN4
f <= Mux0.DB_MAX_OUTPUT_PORT_TYPE


|Lab4_1|onebitALU:\G1:1:G3:stage1
A => mux_2to1:stage0.w0
A => mux_2to1:stage0.w1
B => mux_2to1:stage1.w0
B => mux_2to1:stage1.w1
less => mux_4to1:stage3.w3
carryin => fulladd:stage2.Cin
opcode[0] => mux_4to1:stage3.s[0]
opcode[1] => mux_4to1:stage3.s[1]
opcode[2] => mux_2to1:stage1.s
opcode[3] => mux_2to1:stage0.s
result <= mux_4to1:stage3.f
set <= fulladd:stage2.s
carryout <= fulladd:stage2.Cout


|Lab4_1|onebitALU:\G1:1:G3:stage1|mux_2to1:stage0
w0 => f.DATAB
w1 => f.DATAA
s => f.OUTPUTSELECT
f <= f.DB_MAX_OUTPUT_PORT_TYPE


|Lab4_1|onebitALU:\G1:1:G3:stage1|mux_2to1:stage1
w0 => f.DATAB
w1 => f.DATAA
s => f.OUTPUTSELECT
f <= f.DB_MAX_OUTPUT_PORT_TYPE


|Lab4_1|onebitALU:\G1:1:G3:stage1|fulladd:stage2
Cin => s.IN1
Cin => Cout.IN0
Cin => Cout.IN0
x => s.IN0
x => Cout.IN0
x => Cout.IN1
y => s.IN1
y => Cout.IN1
y => Cout.IN1
s <= s.DB_MAX_OUTPUT_PORT_TYPE
Cout <= Cout.DB_MAX_OUTPUT_PORT_TYPE


|Lab4_1|onebitALU:\G1:1:G3:stage1|mux_4to1:stage3
w0 => Mux0.IN0
w1 => Mux0.IN1
w2 => Mux0.IN2
w3 => Mux0.IN3
s[0] => Mux0.IN5
s[1] => Mux0.IN4
f <= Mux0.DB_MAX_OUTPUT_PORT_TYPE


|Lab4_1|onebitALU:\G1:2:G3:stage1
A => mux_2to1:stage0.w0
A => mux_2to1:stage0.w1
B => mux_2to1:stage1.w0
B => mux_2to1:stage1.w1
less => mux_4to1:stage3.w3
carryin => fulladd:stage2.Cin
opcode[0] => mux_4to1:stage3.s[0]
opcode[1] => mux_4to1:stage3.s[1]
opcode[2] => mux_2to1:stage1.s
opcode[3] => mux_2to1:stage0.s
result <= mux_4to1:stage3.f
set <= fulladd:stage2.s
carryout <= fulladd:stage2.Cout


|Lab4_1|onebitALU:\G1:2:G3:stage1|mux_2to1:stage0
w0 => f.DATAB
w1 => f.DATAA
s => f.OUTPUTSELECT
f <= f.DB_MAX_OUTPUT_PORT_TYPE


|Lab4_1|onebitALU:\G1:2:G3:stage1|mux_2to1:stage1
w0 => f.DATAB
w1 => f.DATAA
s => f.OUTPUTSELECT
f <= f.DB_MAX_OUTPUT_PORT_TYPE


|Lab4_1|onebitALU:\G1:2:G3:stage1|fulladd:stage2
Cin => s.IN1
Cin => Cout.IN0
Cin => Cout.IN0
x => s.IN0
x => Cout.IN0
x => Cout.IN1
y => s.IN1
y => Cout.IN1
y => Cout.IN1
s <= s.DB_MAX_OUTPUT_PORT_TYPE
Cout <= Cout.DB_MAX_OUTPUT_PORT_TYPE


|Lab4_1|onebitALU:\G1:2:G3:stage1|mux_4to1:stage3
w0 => Mux0.IN0
w1 => Mux0.IN1
w2 => Mux0.IN2
w3 => Mux0.IN3
s[0] => Mux0.IN5
s[1] => Mux0.IN4
f <= Mux0.DB_MAX_OUTPUT_PORT_TYPE


|Lab4_1|onebitALU:\G1:3:G3:stage1
A => mux_2to1:stage0.w0
A => mux_2to1:stage0.w1
B => mux_2to1:stage1.w0
B => mux_2to1:stage1.w1
less => mux_4to1:stage3.w3
carryin => fulladd:stage2.Cin
opcode[0] => mux_4to1:stage3.s[0]
opcode[1] => mux_4to1:stage3.s[1]
opcode[2] => mux_2to1:stage1.s
opcode[3] => mux_2to1:stage0.s
result <= mux_4to1:stage3.f
set <= fulladd:stage2.s
carryout <= fulladd:stage2.Cout


|Lab4_1|onebitALU:\G1:3:G3:stage1|mux_2to1:stage0
w0 => f.DATAB
w1 => f.DATAA
s => f.OUTPUTSELECT
f <= f.DB_MAX_OUTPUT_PORT_TYPE


|Lab4_1|onebitALU:\G1:3:G3:stage1|mux_2to1:stage1
w0 => f.DATAB
w1 => f.DATAA
s => f.OUTPUTSELECT
f <= f.DB_MAX_OUTPUT_PORT_TYPE


|Lab4_1|onebitALU:\G1:3:G3:stage1|fulladd:stage2
Cin => s.IN1
Cin => Cout.IN0
Cin => Cout.IN0
x => s.IN0
x => Cout.IN0
x => Cout.IN1
y => s.IN1
y => Cout.IN1
y => Cout.IN1
s <= s.DB_MAX_OUTPUT_PORT_TYPE
Cout <= Cout.DB_MAX_OUTPUT_PORT_TYPE


|Lab4_1|onebitALU:\G1:3:G3:stage1|mux_4to1:stage3
w0 => Mux0.IN0
w1 => Mux0.IN1
w2 => Mux0.IN2
w3 => Mux0.IN3
s[0] => Mux0.IN5
s[1] => Mux0.IN4
f <= Mux0.DB_MAX_OUTPUT_PORT_TYPE


|Lab4_1|onebitALU:\G1:4:G3:stage1
A => mux_2to1:stage0.w0
A => mux_2to1:stage0.w1
B => mux_2to1:stage1.w0
B => mux_2to1:stage1.w1
less => mux_4to1:stage3.w3
carryin => fulladd:stage2.Cin
opcode[0] => mux_4to1:stage3.s[0]
opcode[1] => mux_4to1:stage3.s[1]
opcode[2] => mux_2to1:stage1.s
opcode[3] => mux_2to1:stage0.s
result <= mux_4to1:stage3.f
set <= fulladd:stage2.s
carryout <= fulladd:stage2.Cout


|Lab4_1|onebitALU:\G1:4:G3:stage1|mux_2to1:stage0
w0 => f.DATAB
w1 => f.DATAA
s => f.OUTPUTSELECT
f <= f.DB_MAX_OUTPUT_PORT_TYPE


|Lab4_1|onebitALU:\G1:4:G3:stage1|mux_2to1:stage1
w0 => f.DATAB
w1 => f.DATAA
s => f.OUTPUTSELECT
f <= f.DB_MAX_OUTPUT_PORT_TYPE


|Lab4_1|onebitALU:\G1:4:G3:stage1|fulladd:stage2
Cin => s.IN1
Cin => Cout.IN0
Cin => Cout.IN0
x => s.IN0
x => Cout.IN0
x => Cout.IN1
y => s.IN1
y => Cout.IN1
y => Cout.IN1
s <= s.DB_MAX_OUTPUT_PORT_TYPE
Cout <= Cout.DB_MAX_OUTPUT_PORT_TYPE


|Lab4_1|onebitALU:\G1:4:G3:stage1|mux_4to1:stage3
w0 => Mux0.IN0
w1 => Mux0.IN1
w2 => Mux0.IN2
w3 => Mux0.IN3
s[0] => Mux0.IN5
s[1] => Mux0.IN4
f <= Mux0.DB_MAX_OUTPUT_PORT_TYPE


|Lab4_1|onebitALU:\G1:5:G3:stage1
A => mux_2to1:stage0.w0
A => mux_2to1:stage0.w1
B => mux_2to1:stage1.w0
B => mux_2to1:stage1.w1
less => mux_4to1:stage3.w3
carryin => fulladd:stage2.Cin
opcode[0] => mux_4to1:stage3.s[0]
opcode[1] => mux_4to1:stage3.s[1]
opcode[2] => mux_2to1:stage1.s
opcode[3] => mux_2to1:stage0.s
result <= mux_4to1:stage3.f
set <= fulladd:stage2.s
carryout <= fulladd:stage2.Cout


|Lab4_1|onebitALU:\G1:5:G3:stage1|mux_2to1:stage0
w0 => f.DATAB
w1 => f.DATAA
s => f.OUTPUTSELECT
f <= f.DB_MAX_OUTPUT_PORT_TYPE


|Lab4_1|onebitALU:\G1:5:G3:stage1|mux_2to1:stage1
w0 => f.DATAB
w1 => f.DATAA
s => f.OUTPUTSELECT
f <= f.DB_MAX_OUTPUT_PORT_TYPE


|Lab4_1|onebitALU:\G1:5:G3:stage1|fulladd:stage2
Cin => s.IN1
Cin => Cout.IN0
Cin => Cout.IN0
x => s.IN0
x => Cout.IN0
x => Cout.IN1
y => s.IN1
y => Cout.IN1
y => Cout.IN1
s <= s.DB_MAX_OUTPUT_PORT_TYPE
Cout <= Cout.DB_MAX_OUTPUT_PORT_TYPE


|Lab4_1|onebitALU:\G1:5:G3:stage1|mux_4to1:stage3
w0 => Mux0.IN0
w1 => Mux0.IN1
w2 => Mux0.IN2
w3 => Mux0.IN3
s[0] => Mux0.IN5
s[1] => Mux0.IN4
f <= Mux0.DB_MAX_OUTPUT_PORT_TYPE


|Lab4_1|onebitALU:\G1:6:G4:stage2
A => mux_2to1:stage0.w0
A => mux_2to1:stage0.w1
B => mux_2to1:stage1.w0
B => mux_2to1:stage1.w1
less => mux_4to1:stage3.w3
carryin => fulladd:stage2.Cin
opcode[0] => mux_4to1:stage3.s[0]
opcode[1] => mux_4to1:stage3.s[1]
opcode[2] => mux_2to1:stage1.s
opcode[3] => mux_2to1:stage0.s
result <= mux_4to1:stage3.f
set <= fulladd:stage2.s
carryout <= fulladd:stage2.Cout


|Lab4_1|onebitALU:\G1:6:G4:stage2|mux_2to1:stage0
w0 => f.DATAB
w1 => f.DATAA
s => f.OUTPUTSELECT
f <= f.DB_MAX_OUTPUT_PORT_TYPE


|Lab4_1|onebitALU:\G1:6:G4:stage2|mux_2to1:stage1
w0 => f.DATAB
w1 => f.DATAA
s => f.OUTPUTSELECT
f <= f.DB_MAX_OUTPUT_PORT_TYPE


|Lab4_1|onebitALU:\G1:6:G4:stage2|fulladd:stage2
Cin => s.IN1
Cin => Cout.IN0
Cin => Cout.IN0
x => s.IN0
x => Cout.IN0
x => Cout.IN1
y => s.IN1
y => Cout.IN1
y => Cout.IN1
s <= s.DB_MAX_OUTPUT_PORT_TYPE
Cout <= Cout.DB_MAX_OUTPUT_PORT_TYPE


|Lab4_1|onebitALU:\G1:6:G4:stage2|mux_4to1:stage3
w0 => Mux0.IN0
w1 => Mux0.IN1
w2 => Mux0.IN2
w3 => Mux0.IN3
s[0] => Mux0.IN5
s[1] => Mux0.IN4
f <= Mux0.DB_MAX_OUTPUT_PORT_TYPE


|Lab4_1|onebitALU:\G1:6:G4:stage3
A => mux_2to1:stage0.w0
A => mux_2to1:stage0.w1
B => mux_2to1:stage1.w0
B => mux_2to1:stage1.w1
less => mux_4to1:stage3.w3
carryin => fulladd:stage2.Cin
opcode[0] => mux_4to1:stage3.s[0]
opcode[1] => mux_4to1:stage3.s[1]
opcode[2] => mux_2to1:stage1.s
opcode[3] => mux_2to1:stage0.s
result <= mux_4to1:stage3.f
set <= fulladd:stage2.s
carryout <= fulladd:stage2.Cout


|Lab4_1|onebitALU:\G1:6:G4:stage3|mux_2to1:stage0
w0 => f.DATAB
w1 => f.DATAA
s => f.OUTPUTSELECT
f <= f.DB_MAX_OUTPUT_PORT_TYPE


|Lab4_1|onebitALU:\G1:6:G4:stage3|mux_2to1:stage1
w0 => f.DATAB
w1 => f.DATAA
s => f.OUTPUTSELECT
f <= f.DB_MAX_OUTPUT_PORT_TYPE


|Lab4_1|onebitALU:\G1:6:G4:stage3|fulladd:stage2
Cin => s.IN1
Cin => Cout.IN0
Cin => Cout.IN0
x => s.IN0
x => Cout.IN0
x => Cout.IN1
y => s.IN1
y => Cout.IN1
y => Cout.IN1
s <= s.DB_MAX_OUTPUT_PORT_TYPE
Cout <= Cout.DB_MAX_OUTPUT_PORT_TYPE


|Lab4_1|onebitALU:\G1:6:G4:stage3|mux_4to1:stage3
w0 => Mux0.IN0
w1 => Mux0.IN1
w2 => Mux0.IN2
w3 => Mux0.IN3
s[0] => Mux0.IN5
s[1] => Mux0.IN4
f <= Mux0.DB_MAX_OUTPUT_PORT_TYPE


|Lab4_1|hex:stage4
SW2[0] => HEX2.IN1
SW2[0] => HEX2.IN1
SW2[0] => HEX2.IN1
SW2[0] => HEX2.IN1
SW2[0] => HEX2.IN1
SW2[0] => HEX2.IN0
SW2[0] => HEX2.IN1
SW2[0] => HEX2.IN1
SW2[0] => HEX2.IN1
SW2[0] => HEX2.IN1
SW2[0] => HEX2.IN1
SW2[0] => HEX2.IN1
SW2[0] => HEX2.IN1
SW2[0] => HEX2.IN1
SW2[0] => HEX2.IN1
SW2[0] => HEX2.IN1
SW2[1] => HEX2.IN0
SW2[1] => HEX2.IN1
SW2[1] => HEX2.IN0
SW2[1] => HEX2.IN1
SW2[1] => HEX2.IN1
SW2[1] => HEX2.IN0
SW2[1] => HEX2.IN1
SW2[1] => HEX2.IN1
SW2[1] => HEX2.IN1
SW2[1] => HEX2.IN1
SW2[1] => HEX2.IN0
SW2[1] => HEX2.IN0
SW2[2] => HEX2.IN1
SW2[2] => HEX2.IN1
SW2[2] => HEX2.IN0
SW2[2] => HEX2.IN0
SW2[2] => HEX2.IN0
SW2[2] => HEX2.IN1
SW2[2] => HEX2.IN0
SW2[3] => HEX2.IN1
SW2[3] => HEX2.IN1
SW2[3] => HEX2.IN1
SW2[3] => HEX2.IN1
SW2[3] => HEX2.IN1
SW2[3] => HEX2.IN1
SW2[3] => HEX2.IN1
HEX2[0] <= HEX2.DB_MAX_OUTPUT_PORT_TYPE
HEX2[1] <= HEX2.DB_MAX_OUTPUT_PORT_TYPE
HEX2[2] <= HEX2.DB_MAX_OUTPUT_PORT_TYPE
HEX2[3] <= HEX2.DB_MAX_OUTPUT_PORT_TYPE
HEX2[4] <= HEX2.DB_MAX_OUTPUT_PORT_TYPE
HEX2[5] <= HEX2.DB_MAX_OUTPUT_PORT_TYPE
HEX2[6] <= HEX2.DB_MAX_OUTPUT_PORT_TYPE
SW1[0] => HEX1.IN1
SW1[0] => HEX1.IN1
SW1[0] => HEX1.IN1
SW1[0] => HEX1.IN1
SW1[0] => HEX1.IN1
SW1[0] => HEX1.IN0
SW1[0] => HEX1.IN1
SW1[0] => HEX1.IN1
SW1[0] => HEX1.IN1
SW1[0] => HEX1.IN1
SW1[0] => HEX1.IN1
SW1[0] => HEX1.IN1
SW1[0] => HEX1.IN1
SW1[0] => HEX1.IN1
SW1[0] => HEX1.IN1
SW1[0] => HEX1.IN1
SW1[1] => HEX1.IN0
SW1[1] => HEX1.IN1
SW1[1] => HEX1.IN0
SW1[1] => HEX1.IN1
SW1[1] => HEX1.IN1
SW1[1] => HEX1.IN0
SW1[1] => HEX1.IN1
SW1[1] => HEX1.IN1
SW1[1] => HEX1.IN1
SW1[1] => HEX1.IN1
SW1[1] => HEX1.IN0
SW1[1] => HEX1.IN0
SW1[2] => HEX1.IN1
SW1[2] => HEX1.IN1
SW1[2] => HEX1.IN0
SW1[2] => HEX1.IN0
SW1[2] => HEX1.IN0
SW1[2] => HEX1.IN1
SW1[2] => HEX1.IN0
SW1[3] => HEX1.IN1
SW1[3] => HEX1.IN1
SW1[3] => HEX1.IN1
SW1[3] => HEX1.IN1
SW1[3] => HEX1.IN1
SW1[3] => HEX1.IN1
SW1[3] => HEX1.IN1
HEX1[0] <= HEX1.DB_MAX_OUTPUT_PORT_TYPE
HEX1[1] <= HEX1.DB_MAX_OUTPUT_PORT_TYPE
HEX1[2] <= HEX1.DB_MAX_OUTPUT_PORT_TYPE
HEX1[3] <= HEX1.DB_MAX_OUTPUT_PORT_TYPE
HEX1[4] <= HEX1.DB_MAX_OUTPUT_PORT_TYPE
HEX1[5] <= HEX1.DB_MAX_OUTPUT_PORT_TYPE
HEX1[6] <= HEX1.DB_MAX_OUTPUT_PORT_TYPE


